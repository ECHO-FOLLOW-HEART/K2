# Map static resources from the /public folder to the /assets URL path
#----------用户接口----------
#手机号登录
POST          /users/signin                                            controllers.app.UserCtrlScala.login()

# 注销
POST          /users/logout                                            controllers.app.UserCtrlScala.logout()

#手机注册
POST          /users                                                   controllers.app.UserCtrlScala.signup()

#发送手机验证码
POST          /users/validation-codes                                  controllers.app.UserCtrlScala.sendValidationCode()

#校验验证码，并返回token
POST          /users/tokens                                            controllers.app.UserCtrlScala.checkValidationCode()

#修改密码（包括两种方式：通过token重置，或者通过提供旧密码的方式）
PUT           /users/$uid<\d+>/password                                controllers.app.UserCtrlScala.resetPassword(uid: Long)

PUT           /users/_/password                                        controllers.app.UserCtrlScala.resetPasswordByToken()

#绑定手机
PUT           /users/$uid<\d+>/tel                                     controllers.app.UserCtrlScala.bindCellPhone(uid: Long)

#获取用户信息
GET           /users/$uid<\d+>                                         controllers.app.UserCtrlScala.getUserInfo(uid: Long)

#搜索用户
GET           /users                                                   controllers.app.UserCtrlScala.searchUser(tel:Option[String]?=None, nickName:Option[String]?=None, userId:Option[Long]?=None, query:Option[String], fields:Option[String]=None, offset:Int?=0, limit:Int?=10)

# 修改用户的badge值
PUT           /users/$uid<\d+>/badge                                   controllers.app.UserCtrlScala.setBadge(uid: Long)

#好友请求的列表
GET           /users/$uid<\d+>/contact-requests                        controllers.app.UserCtrlScala.getContactRequests(uid: Long, offset: Int?=0, limit: Int?=50)

#请求添加好友
POST          /users/$uid<\d+>/contact-requests                        controllers.app.UserCtrlScala.requestContact(uid: Long)

#接受或拒绝好友请求
PATCH         /users/$uid<\d+>/contact-requests/:requestId             controllers.app.UserCtrlScala.updateContactRequest(uid: Long, requestId: String)

#添加好友
POST          /users/$uid<\d+>/contacts                                controllers.app.UserCtrlScala.addContact(uid:Long)

#删除好友
DELETE        /users/$uid<\d+>/contacts/$cid<\d+>                      controllers.app.UserCtrlScala.delContact(uid:Long, cid:Long)

#获得好友列表
GET           /users/$uid<\d+>/contacts                                controllers.app.UserCtrlScala.getContactList(uid: Long)

#修改好友备注
PUT           /users/$uid<\d+>/contacts/$contactId<\d+>/memo           controllers.app.UserCtrlScala.updateContactMemo(uid: Long, contactId: Long)

# 将用户添加到黑名单
POST          /users/$uid<\d+>/blacklist                               controllers.app.UserCtrlScala.blockUser(uid: Long)

# 将用户移出黑名单
DELETE        /users/$uid<\d+>/blacklist/$targetId<\d+>                controllers.app.UserCtrlScala.deblockUser(uid: Long, targetId: Long)

#获得好友信息
GET           /users/$uid<\d+>/contacts/$cid<\d+>                      controllers.app.UserCtrlScala.getContact(uid:Long, cid:Long)

#编辑用户信息
PATCH         /users/$uid<\d+>                                         controllers.app.UserCtrlScala.updateUserInfo(uid: Long)

#根据通讯录进行用户匹配
POST          /users/$uid<\d+>/match                                   controllers.app.UserCtrlScala.matchAddressBook(uid: Long)

#达人申请
#POST          /users/$uid<\d+>/expert-requests                         controllers.app.UserCtrlScala.expertRequest(uid: Long)
#搜索达人
GET           /users/experts                                           controllers.app.UserCtrlScala.searchExpert(zone:String)
#----------用户相册接口----------
#获取用户个人相册
GET           /users/$id<\d+>/albums                                   controllers.app.UserUgcCtrl.getUserAlbums(id:Long)
#删除用户个人相册
DELETE        /users/$id<\d+>/albums/:picId                            controllers.app.UserUgcCtrl.deleteUserAlbums(id: Long,picId: String)

#----------用户足迹接口----------
#获取用户足迹
GET           /users/$id<[0-9]+>/footprints                            controllers.app.UserUgcCtrl.getUserTracks(id :Long)

#修改足迹
POST          /users/$id<\d+>/footprints                               controllers.app.UserUgcCtrl.modifyTracks(id:Long)

##----------用户群组接口----------
##取得用户的讨论组
GET           /users/:uid/chatgroups                                   controllers.app.GroupCtrlScala.getUserGroups(uid:Long,page:Int?=0,pageSize:Int?=100)
#
##----------用户讨论组接口----------
#搜索讨论组
GET           /chatgroups                                              controllers.app.GroupCtrlScala.searchChatGroups(query: String?="", tags: String?="", visible: Boolean?=true, page: Int?=0, pageSize: Int?=20)
#创建讨论组
POST          /chatgroups                                              controllers.app.GroupCtrlScala.createGroup()
#修改讨论组信息
PATCH         /chatgroups/:gId                                         controllers.app.GroupCtrlScala.modifyGroup(gId:Long)
#取得讨论组信息
GET           /chatgroups/:gId                                         controllers.app.GroupCtrlScala.getGroup(gId:Long)
#取得讨论组成员信息列表
GET           /chatgroups/:gId/members                                 controllers.app.GroupCtrlScala.getGroupUsers(gId:Long)
#添加讨论组成员
POST          /chatgroups/$gid<\d+>/members                            controllers.app.GroupCtrlScala.addChatGroupMember(gid: Long)
#删除讨论组成员
DELETE        /chatgroups/$gid<\d+>/members/$cid<\d+>                  controllers.app.GroupCtrlScala.deleteChatGroupMember(gid: Long, cid: Long)
#操作讨论组，加减成员
PATCH         /chatgroups/$gid<\d+>/members                            controllers.app.GroupCtrlScala.opGroup(gid:Long)
#退出讨论组
#POST         /chatgroups/:gId/quit                                         controllers.GroupCtrl.quitGroup(gId:Long)

#----------其他接口----------
#其他
#封面故事
GET           /misc/cover-stories                                      controllers.app.MiscCtrl.appHomeImage(width: Int, height: Int, quality: Int?=85, format: String?="jpg", interlace: Int?=1)
#添加收藏
POST          /misc/favorites                                          controllers.app.MiscCtrl.addFavorite()
#取得收藏
GET           /misc/favorites                                          controllers.app.MiscCtrl.getFavorite(faType: String?="", page: Int?=0, pageSize: Int?=20)
#删除收藏
DELETE        /misc/favorites/:id                                      controllers.app.MiscCtrl.delFavorite(id: String)
#获得资源上传凭证
GET           /misc/upload-tokens/:scenario                            controllers.app.MiscCtrl.putPolicy(scenario:String)
#处理资源上传的回调
POST          /misc/upload-callback                                    controllers.app.MiscCtrl.getCallback()
#封面故事
#GET           /misc/cover-stories                                      controllers.app.MiscCtrl.appHomeImage(width: Int, height: Int, quality: Int?=85, format: String?="jpg", interlace: Int?=1)
#推荐
GET           /misc/recommendations                                    controllers.app.MiscCtrl.recommend(page: Int?=0, pageSize: Int?=999)
#获得版本信息
GET           /misc/updates                                            controllers.app.MiscCtrl.getUpdates()
#反馈
POST          /misc/feedback                                           controllers.app.MiscCtrl.postFeedback()
#举报
POST          /misc/tip-offs                                           controllers.app.MiscCtrl.postTipOff()
#热门搜索
GET           /misc/hot-searches                                       controllers.app.MiscCtrl.getHotSearchs()
#达人申请
POST          /misc/expert-requests                                    controllers.app.MiscCtrlScala.expertRequest()
#搜索
GET           /search                                                  controllers.app.MiscCtrl.search(keyword: String,locId: String?="",loc:Boolean?=false,vs:Boolean?=false,hotel:Boolean?=false,restaurant:Boolean?=false,shopping:Boolean?=false,page:Int?=0,pageSize:Int?=5)
#提示
GET           /suggestions                                             controllers.app.MiscCtrl.getSuggestions(keyword: String, loc: Boolean?=false, vs: Boolean?=false, hotel: Boolean?=false, restaurant: Boolean?=false, shopping: Boolean?=false,pageSize: Int?=5)
#----------POI接口----------
#查看POI详情
# 景点详情
GET           /poi/viewspots/$spotId<[0-9a-f]{24}>                     controllers.app.POICtrl.viewPOIInfo(poiDesc: String="viewspot", spotId: String, commentPage: Int?=0, commentPageSize: Int?=2,rmdPage: Int?=0, rmdPageSize: Int?=10)
# 景点详情(H5)
GET           /poi/viewspots/$spotId<[0-9a-f]{24}>/descriptions        controllers.app.POICtrl.viewPOIInfo(poiDesc: String="viewspot", spotId: String, commentPage: Int?=0, commentPageSize: Int?=2,rmdPage: Int?=0, rmdPageSize: Int?=10)
#获取景点的深度介绍(H5)
GET           /poi/viewspots/$id<[0-9a-f]{24}>/details                 controllers.app.POICtrl.getTravelGuide(id: String, category: String,poiDesc: String="viewspot")

# 酒店详情
GET           /poi/hotels/$spotId<[0-9a-f]{24}>                        controllers.app.POICtrl.viewPOIInfo(poiDesc: String="hotel", spotId: String, commentPage: Int?=0, commentPageSize: Int?=2,rmdPage: Int?=0, rmdPageSize: Int?=10)
#美食详情
GET           /poi/restaurants/:spotId                                 controllers.app.POICtrl.viewPOIInfo(poiDesc: String="restaurant", spotId: String, commentPage: Int?=0, commentPageSize: Int?=2,rmdPage: Int?=0, rmdPageSize: Int?=10)
#购物详情
GET           /poi/shopping/:spotId                                    controllers.app.POICtrl.viewPOIInfo(poiDesc: String="shopping", spotId: String, commentPage: Int?=0, commentPageSize: Int?=2,rmdPage: Int?=0, rmdPageSize: Int?=10)
#景点搜索
GET           /poi/viewspots                                           controllers.app.POICtrl.poiSearch(poiType: String="viewspot", query: String?="",locality:String?="",lng: Double?=0, lat: Double?=0, maxDist: Double?=20,tag: String?="",hotelType: String?="",sortby: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=10)
# 酒店列表
GET           /poi/hotels                                              controllers.app.POICtrl.poiSearch(poiType: String="hotel", query: String?="",locality:String?="",lng: Double?=0, lat: Double?=0, maxDist: Double?=20,tag: String?="",hotelType: String?="",sortby: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=10)
# 美食列表
GET           /poi/restaurants                                         controllers.app.POICtrl.poiSearch(poiType: String="restaurant", query: String?="",locality:String?="",lng: Double?=0, lat: Double?=0, maxDist: Double?=20,tag: String?="",hotelType: String?="",sortby: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=10)
# 购物列表
GET           /poi/shopping                                            controllers.app.POICtrl.poiSearch(poiType: String="shopping", query: String?="",locality:String?="",lng: Double?=0, lat: Double?=0, maxDist: Double?=20,tag: String?="",hotelType: String?="",sortby: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=10)

#----------攻略接口----------
# 新建行程单（包括新建和fork两种模式）
POST          /users/$uid<\d+>/guides                                  controllers.app.GuideCtrl.guides(uid: Int)

#保存攻略
PUT           /users/$uid<\d+>/guides/$id<[0-9a-f]{24}>                controllers.app.GuideCtrl.saveGuide(uid: Long, id: String)

# 获得攻略列表
GET           /users/$uid<\d+>/guides                                  controllers.app.GuideCtrl.getGuidesByUser(uid: Long, page: Int?=0, pageSize: Int?=20)

# 查看完整攻略详情
GET           /users/$uid<\d+>/guides/$id<[0-9a-f]{24}>                controllers.app.GuideCtrl.getGuideInfo(uid: Int, id: String, part: String="all")

# 修改行程单详情
PATCH         /users/$uid<\d+>/guides/$guideId<[0-9a-f]{24}>           controllers.app.GuideCtrlScala.updateGuideInfo(uid: Long, guideId: String)

#查看攻略详情
GET           /users/$uid<\d+>/guides/:id/:part                        controllers.app.GuideCtrl.getGuideInfo(uid: Int, id: String, part: String)

#删除攻略
DELETE        /guides/:id                                              controllers.app.GuideCtrl.deleteGuide(id: String)

#获得目的地的攻略信息
GET           /guides/locality/:id/:part                               controllers.app.GuideCtrl.getLocalityGuideInfo(id:String,part: String)

#----------地理信息接口----------
# 搜索城市
#国家详情
GET           /geo/countries/$id<[0-9a-f]{24}>                         controllers.app.GeoCtrl.getCountyById(id: String)
#获得国家列表
GET           /geo/countries                                           controllers.app.GeoCtrlScala.getCountryExperts(withExperts:Boolean=true)
#获得国家达人列表
GET           /geo/countries/:code/expert                              controllers.app.UserUgcCtrl.getExpertUserByTracks(code:String)
#展示国内目的地
GET           /geo/localities/domestic                                 controllers.app.GeoCtrl.exploreDestinations(abroad: Boolean=false,groupBy:Boolean?=false, page:Int?=0, pageSize:Int?=100)
#展示国外目的地
GET           /geo/localities/abroad                                   controllers.app.GeoCtrl.exploreDestinations(abroad: Boolean=true,groupBy:Boolean?=false, page:Int?=0, pageSize:Int?=100)
#查看目的地详情
GET           /geo/localities/:id                                      controllers.app.GeoCtrl.getLocality(id: String)
#查看目的地详情图集
GET           /geo/localities/:id/albums                               controllers.app.GeoCtrl.getLocalityAlbums(id: String, page:Int?=0, pageSize: Int?=20)
#查看目的地评论
GET           /geo/localities/$id<[0-9a-f]{24}>/comments               controllers.app.GeoCtrl.getLocalityComments(commentType: String?="comment", id: String, page:Int?=0, pageSize: Int?=20)
#赞
POST          /geo/localities/$id<[0-9a-f]{24}>/votes                  controllers.app.MiscCtrlScala.vote(itemType:String ="localities",id:String,userId:Long?=0)
#不赞了
DELETE        /geo/localities/$id<[0-9a-f]{24}>/votes/$uid<\d+>        controllers.app.MiscCtrlScala.noVote(itemType:String ="localities",id:String,uid:Long)

#获取景点的深度介绍-概况（H5）
GET           /geo/localities/$id<[0-9a-f]{24}>/outLine                controllers.app.GeoCtrl.getTravelGuideOutLine(id: String)

#获取景点的深度介绍（H5）
GET           /geo/localities/$id<[0-9a-f]{24}>/details                controllers.app.GeoCtrl.getTravelGuide(id: String, field: String)


#----------用户评价接口----------
#查看景点的评价(H5)
POST          /poi/viewspots/$id<[0-9a-f]{24}>/comments                controllers.app.MiscCtrl.saveComment(id: String)
#查看景点的评价(H5)
GET           /poi/viewspots/$id<[0-9a-f]{24}>/comments                controllers.app.MiscCtrl.displayComment(poiType: String="vs",id: String, minRating: Double?=0, maxRating: Double?=1, lastUpdate: Long?=0,page:Int?=0, pageSize: Int?=15)
#查看餐厅的评价(H5)
GET           /poi/restaurants/$id<[0-9a-f]{24}>/comments              controllers.app.MiscCtrl.displayComment(poiType: String="restaurant",id: String, minRating: Double?=0, maxRating: Double?=1, lastUpdate: Long?=0,page:Int?=0, pageSize: Int?=15)
#查看商店的评价(H5)
GET           /poi/shopping/$id<[0-9a-f]{24}>/comments                 controllers.app.MiscCtrl.displayComment(poiType: String="shopping",id: String, minRating: Double?=0, maxRating: Double?=1, lastUpdate: Long?=0,page:Int?=0, pageSize: Int?=15)

#----------其他接口----------
#协议(H5)
GET           /eula                                                    controllers.app.MiscCtrlScala.eula()
#公司介绍(H5)
GET           /about                                                   controllers.app.MiscCtrlScala.about(version: String?="2.0")
#更多精选游记
GET           /travelnotes                                             controllers.app.TravelNoteCtrl.searchTravelNotes(query: String?="", locality: String?="", page: Int?=0, pageSize: Int?=10)
#返回单篇游记详情(H5)
GET           /travelnotes/$id<[0-9a-f]{24}>                           controllers.app.TravelNoteCtrl.travelNoteDetail(id:String)
#获取用户的游记
GET           /users/$uid<\d+>/travelnotes                             controllers.app.TravelNoteCtrlScala.getUsersTravelNotes(uid:Long)


GET           /createCountries                                         controllers.app.Batch.createExpertTrackByCountry()
GET           /createTracks                                            controllers.app.Batch.userInfoToTrack()
GET           /checkVsLocality                                         controllers.app.Batch.checkVsLocality(abroad:Boolean?=true)
POST          /refreshExpert                                           controllers.app.Batch.refreshExpertInfo()


GET           /expertInfo/zone                                         controllers.app.Batch.updateExpertInfo()
