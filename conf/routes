# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
#GET           /                                                  controllers.Application.index()

->            /app                                               app.Routes
->            /core                                              core.Routes
->            /web                                               web.Routes

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                      controllers.Assets.at(path="/public", file)

GET           /geo/localities/search                             controllers.GeoCtrl.searchLocality(keyword: String?="", country: String?="", scope: Int?=1, prefix: Boolean?=true, page: Int?=0, pageSize: Int?=20)
GET           /geo/localities/$id<[0-9a-f]{24}>                  controllers.GeoCtrl.getLocality(id: String, relatedVs: Boolean?=false, hotel: Boolean?=false, restaurant: Boolean?=false)
#GET           /geo/localities/baiduId/:baiduId                   controllers.GeoCtrl.getLocalityBaiduId(baiduId: Integer)
GET           /geo/countries/search                              controllers.GeoCtrl.searchCountry(keyword: String?="", searchType: String?="", page: Int?=0, pageSize: Int?=10)
GET           /geo/countries/$id<[0-9a-f]{24}>                   controllers.GeoCtrl.getCountry(id: String)

GET           /itineraries/air-routes                            controllers.TrafficCtrl.searchAirRoutes(dep: String, arr: String, depTime: String?="", sortField: String?="price", sort: String?="desc", timeFilterType: String?="dep", timeFilter: Int?=0, page: Int?=0, pageSize: Int?=20)
GET           /itineraries/air-routes/:flightCode                controllers.TrafficCtrl.getAirRouteByCode(flightCode: String, depTime: String?="")
GET           /itineraries/train-station                         controllers.TrafficCtrl.searchTrainStationByLoc(loc: String)
GET           /itineraries/train-routes                          controllers.TrafficCtrl.getTrainRoutes(dep: String, arr: String,depTime: String?="", trainType: String?="", sortField: String?="price", sort: String?="asc", timeFilterType: String?="dep", timeFilter: Int?=0, page: Int?=0, pageSize: Int?=20)
GET           /itineraries/train-routes/:trainCode               controllers.TrafficCtrl.getTrainRouteByCode(trainCode: String, depTime: String?="")


GET           /explore/plans                                     controllers.PlanCtrl.explorePlans(fromLoc: String?="", loc: String?="", poi: String?="", sortField: String?="", sort: String?="asc", tag: String?="", minDays:Int?=0 ,maxDays:Int?=999, page: Int?=0, pageSize: Int?=20)
GET           /plans/templates/:planId                           controllers.PlanCtrl.getPlanFromTemplates(planId: String, fromLoc: String?="", backLoc: String?="",webFlag: Int=0,uid: String?="")
POST          /plans/optimizers                                  controllers.PlanCtrl.optimizePlan()

#GET           /ugc-plans/users/:userId                           controllers.PlanCtrl.getUGCPlans(userId: String, ugcPlanId: String?="", page: Int?=0, pageSize: Int?=20)
GET           /ugc-plans/users/:userId                           controllers.PlanCtrl.getUGCPlans1(userId: String, ugcPlanId: String?="", page: Int, pageSize: Int)
GET           /ugc-plans/:ugcPlanId                              controllers.PlanCtrl.getUGCPlans1(userId: String?="", ugcPlanId: String, page: Int?=0, pageSize: Int?=1)
GET           /share-plans/:sharePlanId                          controllers.PlanCtrl.getSharePlans(sharePlanId: String)
POST          /ugc-plans                                         controllers.PlanCtrl.saveUGCPlan()
DELETE        /ugc-plans/:ugcPlanId                              controllers.PlanCtrl.deleteUGCPlans(ugcPlanId: String)
POST          /ugc-plans/share                                   controllers.PlanCtrl.shareUGCPlan()

# POI


POST          /poi/view-spots/$spotId<[0-9a-f]{24}>/checkin      controllers.POICtrl.poiCheckin(poiType: String="vs", spotId: String)
GET           /poi/view-spots/search                             controllers.POICtrl.poiSearch(poiType: String="vs", locId: String?="", tag: String?="", keyword: String?="", page: Int?=0, pageSize: Int?=20,sortField: String?="score", sort: String?="asc",hotelType: String?="")
GET           /poi/view-spots/$spotId<[0-9a-f]{24}>              controllers.POICtrl.viewSpotInfo(poiDesc: String="vs", spotId: String, showDetails: Boolean=true, showRelated: Boolean?=false, pageSize: Int?=10)
GET           /poi/view-spots/$spotId<[0-9a-f]{24}>/profiles     controllers.POICtrl.viewSpotInfo(poiDesc: String="vs", spotId: String, showDetails: Boolean=false, showRelated: Boolean=true, pageSize: Int?=10)
GET           /poi/view-spots/localities/$locId<[0-9a-f]{24}>    controllers.POICtrl.poiSearch(poiType: String="vs", locId: String, tag: String?="", keyword: String?="", page: Int?=0, pageSize: Int?=20, sortField: String?="", sort: String?="asc", hotelType: String?="")
GET           /poi/view-spots/$spotId<[0-9a-f]{24}>/related      controllers.POICtrl.relatedViewSpotList(spotId: String, tagFilter: String?="", sortFilter: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=20)


GET           /poi/hotels/search                                 controllers.POICtrl.poiSearch(poiType: String="hotel", locId: String?="", tag: String?="", keyword: String?="", page: Int?=0, pageSize: Int?=20,sortField: String?="score", sort: String?="asc",hotelType: String?="")
GET           /poi/hotels/:spotId                                controllers.POICtrl.viewSpotInfo(poiDesc: String="hotel", spotId: String, showDetails: Boolean=true, showRelated: Boolean?=false, pageSize: Int?=10)
GET           /poi/hotels/:spotId/profiles                       controllers.POICtrl.viewSpotInfo(poiDesc: String="hotel", spotId: String, showDetails: Boolean=false, showRelated: Boolean?=true, pageSize: Int?=10)
GET           /poi/hotels/localities/:locId                      controllers.POICtrl.hotelList(locId: String, tagFilter: String?="", sortFilter: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=20)


GET           /poi/restaurants/search                            controllers.POICtrl.poiSearch(poiType: String="restaurants", locId: String?="", tag: String?="", keyword: String?="", page: Int?=0, pageSize: Int?=20,sortField: String?="score", sort: String?="asc",hotelType: String?="")
GET           /poi/restaurants/:spotId                           controllers.POICtrl.viewSpotInfo(poiDesc: String="restaurants", spotId: String, showDetails: Boolean=true, showRelated: Boolean?=false, pageSize: Int?=10)
GET           /poi/restaurants/:spotId/profiles                  controllers.POICtrl.viewSpotInfo(poiDesc: String="restaurants", spotId: String, showDetails: Boolean=false, showRelated: Boolean?=true, pageSize: Int?=10)

GET           /poi/restaurants/localities/:locId                 controllers.POICtrl.restaurantList(locId: String, tagFilter: String?="", sortFilter: String?="", sort: String?="desc", page: Int?=0, pageSize: Int?=20)

POST          /sys/feedback                                      controllers.MiscCtrl.postFeedback()
GET           /sys/updates/:platform                             controllers.MiscCtrl.getUpdateInfo(platform: String)
GET           /sys/updates                                       controllers.MiscCtrl.getUpdates()
GET           /suggestions                                       controllers.MiscCtrl.getSuggestions(word: String, loc: Boolean?=false, vs: Boolean?=false, hotel: Boolean?=false, restaurant: Boolean?=false, pageSize: Int?=5)
GET           /misc/weather/:locId                               controllers.MiscCtrl.getWeatherInfo(locId :String)

POST          /app/misc/send-validation                          controllers.MiscCtrl.sendValidation()
POST          /app/misc/check-validation                         controllers.MiscCtrl.checkValidation()
GET           /sys/register                                      controllers.MiscCtrl.updateUserInfo()
GET           /misc/notes/search                                 controllers.TravelNoteCtrl.searchNotes()
GET           /app/misc/weather/:id                              controllers.WeatherCtrl.getWeatherDetail(id:String)
GET           /explore                                           controllers.MiscCtrl.explore(showDetails: Boolean?=false, loc: Boolean?=false, vs: Boolean?=false, hotel: Boolean?=false, restaurant: Boolean?=false, abroad: Boolean?=false, page: Int?=0, pageSize: Int?=20)
GET           /recommend/dest                                    controllers.MiscCtrl.destRecommend()


POST          /users/oauth-login                                 controllers.UserCtrl.oauthLogin()
GET           /users/udid/:udid                                  controllers.UserCtrl.udidLogin(udid: String)
GET           /users/:userId                                     controllers.UserCtrl.getUserProfileById(userId: String)
GET           /users/nick-names/:userName                        controllers.UserCtrl.getUserProfileByName(userName: String)
GET           /users/:userId/favors/view-spots                   controllers.UserCtrl.getUserFavoredVS(userId: String, page: Int?=0, pageSize: Int?=20)
PUT           /users/:userId/favors/view-spots                   controllers.UserCtrl.putUserFavoredVS(userId: String)
DELETE        /users/:userId/favors/view-spots/:vsId             controllers.UserCtrl.removeUserFavoredVS(userId: String, vsId: String)

GET           /home-images/$width<[0-9]+>x$height<[0-9]+>        controllers.MiscCtrl.appHomeImage(width: Int, height: Int, quality: Int?=85, format: String?="jpg", interlace: Int?=1)

